<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="digitalgame.dao.UserFinanceAccountMapper" >
  <resultMap id="BaseResultMap" type="digitalgame.model.po.UserFinanceAccount" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="balance" property="balance" jdbcType="FLOAT" />
    <result column="locking" property="locking" jdbcType="FLOAT" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, balance, locking, version, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_finance_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_finance_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="digitalgame.model.po.UserFinanceAccount" >
    insert into user_finance_account (id, user_id, balance, 
      locking, version, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{balance,jdbcType=FLOAT}, 
      #{locking,jdbcType=FLOAT}, #{version,jdbcType=INTEGER}, #{createTime,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="digitalgame.model.po.UserFinanceAccount" >
    <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
      SELECT  last_insert_rowid() AS id
    </selectKey>
    insert into user_finance_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="locking != null" >
        locking,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=FLOAT},
      </if>
      <if test="locking != null" >
        #{locking,jdbcType=FLOAT},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="digitalgame.model.po.UserFinanceAccount" >
    update user_finance_account
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=FLOAT},
      </if>
      <if test="locking != null" >
        locking = #{locking,jdbcType=FLOAT},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="digitalgame.model.po.UserFinanceAccount" >
    update user_finance_account
    set user_id = #{userId,jdbcType=INTEGER},
      balance = #{balance,jdbcType=FLOAT},
      locking = #{locking,jdbcType=FLOAT},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>